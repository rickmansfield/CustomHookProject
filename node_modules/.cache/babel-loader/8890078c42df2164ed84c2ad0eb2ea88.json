{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rick\\\\OneDrive\\\\Lambda School\\\\lambdaProjects\\\\UNIT3\\\\week1\\\\CustomHookProject\\\\src\\\\index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport axios from \"axios\";\nimport { useDarkMode } from \"./hooks/useDarkMode\";\nimport Charts from \"./components/Charts\";\nimport Navbar from \"./components/Navbar\";\nimport \"./styles.scss\";\n\nconst App = () => {\n  const [coinData, setCoinData] = useState([]); // const [darkMode, setDarkMode] = useState(false);\n\n  useEffect(() => {\n    axios.get(\"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=true\").then(res => setCoinData(res.data)).catch(err => console.log(err));\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: useDark ? \"dark-mode App\" : \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Navbar, {\n    darkMode: useDarkMode,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Charts, {\n    coinData: coinData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["C:/Users/Rick/OneDrive/Lambda School/lambdaProjects/UNIT3/week1/CustomHookProject/src/index.js"],"names":["React","useState","useEffect","ReactDOM","axios","useDarkMode","Charts","Navbar","App","coinData","setCoinData","get","then","res","data","catch","err","console","log","useDark","rootElement","document","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,qBAA5B;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAGA,OAAO,eAAP;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC,CADgB,CAEhB;;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CACFO,GADH,CAEI,wHAFJ,EAIGC,IAJH,CAIQC,GAAG,IAAIH,WAAW,CAACG,GAAG,CAACC,IAAL,CAJ1B,EAKGC,KALH,CAKSC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CALhB;AAMD,GAPQ,EAON,EAPM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAEG,OAAO,GAAG,eAAH,GAAqB,KAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEd,WAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,MAAD;AAAQ,IAAA,QAAQ,EAAEI,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF;AAOD,CAnBD;;AAqBA,MAAMW,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACAnB,QAAQ,CAACoB,MAAT,eAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBH,WAAzB","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport axios from \"axios\";\r\nimport { useDarkMode } from \"./hooks/useDarkMode\";\r\n\r\nimport Charts from \"./components/Charts\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\n\r\nimport \"./styles.scss\";\r\n\r\nconst App = () => {\r\n  const [coinData, setCoinData] = useState([]);\r\n  // const [darkMode, setDarkMode] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=10&page=1&sparkline=true\"\r\n      )\r\n      .then(res => setCoinData(res.data))\r\n      .catch(err => console.log(err));\r\n  }, []);\r\n  return (\r\n    <div className={useDark ? \"dark-mode App\" : \"App\"}>\r\n      {/* <Navbar darkMode={darkMode} setDarkMode={setDarkMode} /> */}\r\n      <Navbar darkMode={useDarkMode}/>\r\n      <Charts coinData={coinData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"]},"metadata":{},"sourceType":"module"}